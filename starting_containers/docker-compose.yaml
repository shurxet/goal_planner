version: '2.17.2'

services:
  postgres:
    image: postgres:15.2-alpine
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5


  migrations:
    build:
      context: ../backend/
      dockerfile: Dockerfile
    image: shurxet/backend_goal_planner:latest
    env_file:
      - ./.env
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: "5432"
    depends_on:
      postgres:
        condition: service_healthy
    command: python manage.py migrate


  api:
    build:
      context: ../backend/
      dockerfile: Dockerfile
    image: shurxet/backend_goal_planner:latest
    env_file:
      - ./.env
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: "5432"
    volumes:
      - ../backend/:/app/.
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
    restart: always
    command: python manage.py runserver 0.0.0.0:8000


  frontend:
    image: sermalenk/skypro-front:lesson-38
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api
    restart: always
    ports:
      - "80:80"


  swagger-tasks:
    image: swaggerapi/swagger-ui:latest
    environment:
      SWAGGER_JSON: "/openapi.yaml"
    volumes:
      - ./openapi.yaml:/openapi.yaml
    ports:
      - "8080:8080"
